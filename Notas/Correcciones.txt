General:
  -Archivos de Cabecera {Contienen Estructuras y Funciones} 
  -Modulo Transacciones: Completado 100%
  //Añadir Cierre de Cuentas
  -Modulo Prestamos: Completado 100% TXT 
//Añador calculo de edad
  -Modulo Cuentas: Completado 100% TXT
  -Modulo Informe: Prestamos 95%

Modulo Seguridad:
  Empleado : "BAC123". 

Modulo Prestamos:
Añadir al resumen numero de cliente.

csv extension
fstream
std::cout << " - (x" << productos_facturados[i].unidades_compradas << ") - $" << (productos_facturados[i].precio * productos_facturados[i].unidades_compradas) << std::endl;
        }
        total += (productos_facturados[i].precio * productos_facturados[i].unidades_compradas);
    }
    std::cout << "============================================" << std::endl;
    std::cout << "Total a pagar: $" << total << std::endl;
    system("pause");

    exportarFacturaCSV(productos_facturados, productos_cant, factura_nombre, total);
    delete[] productos_facturados; // Don't forget to free the dynamically allocated memory
}

void facturarMain(InventoryItems arr[], int inv_cant) {
    int opcion;

    do {
        mostrarMenu();
        std::cout << "Ingrese una opcion: ";
        std::cin >> opcion;

        switch (opcion) {
            case 1:
                facturar(arr, inv_cant);
                break;
            case 2:
                std::cout << "Saliendo del programa..." << std::endl;
                return;
            default:
                std::cout << "Opcion invalida. Intente nuevamente." << std::endl;
                break;
        }
    } while (opcion != 2);
}



Nota:
El modulo de seguridad se fusionara con el de cuentas una vez que este completado al 100%
